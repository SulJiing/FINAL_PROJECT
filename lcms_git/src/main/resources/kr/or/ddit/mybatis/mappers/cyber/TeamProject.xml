<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.professor.cyber.teamproject.dao.TeamProjectDAO">

	<select id="selectTeamProjectList" parameterType="String" resultType="TeamProjectVO">
		SELECT
		    tp_no,
		    tp_name,
		    tp_date,
		    tp_assscore,
		    gf_no,
		    lec_code,
		    tp_status
		FROM
		    TEAM_PROJECT
		WHERE 
		    lec_code = #{lecCode}
		    AND tp_status = #{tpStatus}
	</select>
	
	<select id="selectTeamProjectListS" parameterType="String" resultType="TeamProjectVO">
		SELECT
		    TP.tp_no,
		    TP.tp_name,
		    TP.tp_date,
		    TP.tp_assscore,
		    TP.gf_no,
		    TP.lec_code,
		    TP.tp_status,
		    T.submit_status,
		    T.team_no
		FROM
		    TEAM_PROJECT TP 
		    	LEFT OUTER JOIN team T on (TP.tp_no = T.tp_no)
		    	LEFT OUTER JOIN team_member TM on (T.team_no = TM.team_no)
		WHERE 
		    TP.lec_code = #{lecCode}
		    AND TP.tp_status = #{tpStatus}
		    AND TM.smem_no = #{smemNo}
	</select>
	
	<select id="selectAllStudent" parameterType="String" resultType="StudentVO">
		SELECT 
		    S.smem_no,
		    M.mem_name,
		    D.dept_name
		FROM STUDENT S
		    INNER JOIN registration R on (R.smem_no = S.smem_no)
		    INNER JOIN member M on (S.smem_no = M.mem_no)
		    INNER JOIN DEPARTMENT D on (S.dept_code = D.dept_code)
		WHERE R.lec_code = #{lecCode}
	</select>
	
	<select id="selectAllTeamCount" parameterType="String" resultType="int">
		SELECT count(*)
		FROM TEAM_PROJECT TP INNER JOIN TEAM T on (TP.tp_no = T.tp_no)
		WHERE TP.tp_no = #{tpNo}
	</select>
	
	<select id="selectCompletion" parameterType="String" resultType="int">
		SELECT count(*)
		FROM TEAM_PROJECT TP INNER JOIN TEAM T on (TP.tp_no = T.tp_no)
		WHERE TP.tp_no = #{tpNo}
		AND T.submit_status = '제출'
	</select>
	
	<resultMap type="TeamProjectVO" id="teamProjectMap" autoMapping="true">
		<id property="tpNo" column="tp_no"/>
		<collection property="fileList" javaType="list" ofType="FileVO" autoMapping="true">
			<id property="fileNo" column="file_no"/>
		</collection>
	</resultMap>
	
	<select id="selectTeamProject" parameterType="String" resultMap="teamProjectMap">
		SELECT
		    TP.tp_no,
		    TP.tp_name,
		    TP.tp_date,
		    TP.tp_assscore,
		    TP.gf_no,
		    TP.lec_code,
		    TP.tp_status,
		    F.file_no,
		    F.file_nm,
		    F.file_save,
		    F.mime,
		    F.file_size,
		    F.fancy_size,
		    F.gf_no
		FROM
		    team_project TP LEFT OUTER JOIN "FILE" F on (TP.gf_no = F.gf_no)
		WHERE TP.tp_no = #{tpNo}
	</select>
	
	<update id="updateTeamProject" parameterType="TeamProjectVO">
		UPDATE team_project
		SET
		    tp_name = #{tpName,jdbcType=VARCHAR}
		    ,tp_date = #{tpDate,jdbcType=VARCHAR}
		    ,tp_assscore = #{tpAssscore,jdbcType=NUMERIC}
		WHERE
		    tp_no = #{tpNo,jdbcType=VARCHAR}
	</update>	
	
	<delete id="deleteTeamProject" parameterType="String">
		DELETE FROM team_project
		WHERE
		tp_no = #{tpNo,jdbcType=VARCHAR}
	</delete>
	
	<select id="MaxTpNo" resultType="String">
		SELECT 'TP' || LPAD(TO_CHAR(NVL(MAX(to_number(substr(tp_no,3))), 0)+1), 5, '0')   
		FROM team_project
	</select>
	
	<insert id="insertTeamProject" parameterType="TeamProjectVO">
		INSERT INTO team_project (
		    tp_no,
		    tp_name,
		    tp_date,
		    tp_assscore,
		    gf_no,
		    lec_code
		) VALUES (
		    #{tpNo,jdbcType=VARCHAR}
		    , #{tpName,jdbcType=VARCHAR}
		    , #{tpDate,jdbcType=VARCHAR}
		    , #{tpAssscore,jdbcType=NUMERIC}
		    , #{gfNo,jdbcType=VARCHAR}
		    , #{lecCode,jdbcType=VARCHAR}
		)
	</insert>
	
	<update id="changeTeamProjectStatus" parameterType="String">
		UPDATE team_project
		SET
		    tp_status = #{tpStatus,jdbcType=VARCHAR}
		WHERE
		    tp_no = #{tpNo,jdbcType=VARCHAR}
	</update>
	
	<update id="tpEval" parameterType="String">
		UPDATE team_project
		SET
			tp_status = 'ST03'
		WHERE
		    lec_code = #{lecCode}
	</update>
	
</mapper>