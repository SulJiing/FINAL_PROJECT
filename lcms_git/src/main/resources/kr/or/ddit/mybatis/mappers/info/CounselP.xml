<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.professor.info.counsel.startcounsel.dao.CounselPDAO">
	<select id="selectCounsList" parameterType="String" resultType="CounselVO">
		SELECT
		    A.couns_appno,
		    A.couns_datetime,
		    A.couns_reason,
		    A.couns_method,
		    A.couns_type,
		    A.couns_status,
		    A.couns_reject,
		    d.reject_Reason,
		    A.mem_no,
		    B.MEM_NAME AS STUDENT_NAME,
		    A.couns_pro,
		    C.MEM_NAME AS PROFESSOR_NAME,
		    A.couns_content,
		    A.couns_notice,
		    A.couns_no,
		    A.couns_title
		FROM
		    counsel A
		JOIN 
		    MEMBER B ON A.MEM_NO = B.MEM_NO
		JOIN 
		    MEMBER C ON A.COUNS_PRO=C.MEM_NO
		left outer join
		    reject d on a.couns_reject = d.reject_code
		where 
		    couns_pro =#{pmemNo}
		AND
		<![CDATA[
		    COUNS_STATUS <> 'STA04'
		    ]]>
		ORDER BY 
		    COUNS_DATETIME DESC
	
	</select>
	<select id="selectStudent" parameterType="String" resultType="StudentVO">
		SELECT
		    B.MEM_NAME,
		    B.MEM_EMAIL,
		    CASE
		        WHEN SUBSTR(B.MEM_REG1, 1, 1) = '0' THEN '20' || SUBSTR(B.MEM_REG1, 1, 2)
		        ELSE '19' || SUBSTR(B.MEM_REG1, 1, 2)
		    END || '-' || SUBSTR(B.MEM_REG1, 3, 2) || '-' || SUBSTR(B.MEM_REG1, 5, 2) || '('|| 
            CASE
                WHEN SUBSTR(B.MEM_REG2, 1, 1) = '1' OR SUBSTR(B.MEM_REG2, 1, 1) = '3' THEN '남'
                ELSE '여'
            END ||')' AS BAS,        
		    B.GF_NO,
            '학사'||A.STU_GR||'학년('||F.VALUE||')'||E.AC_NAME AS STU_PROG,
		    A.smem_no, 
            D.COL_NAME||' '||C.DEPT_NAME CAD, 
		    A.stu_record,
		    E.AC_NAME, 
		    A.STU_GR||'학년' AS STU_GR,
            A.STU_JOINYEAR ||  (SELECT VALUE FROM COMMON WHERE NAME = 'AC07')||'(입학)' AS STU_JOINYEAR
		FROM
		    student A
		JOIN
		    MEMBER B ON A.SMEM_NO = B.MEM_NO
        JOIN 
            DEPARTMENT C ON A.DEPT_CODE =C.DEPT_CODE
        JOIN 
            COLLEGE D ON C.COL_CODE = D.COL_CODE
        JOIN 
            ACADEMIC_CLASSIFICATION E ON A.STU_RECORD=E.AC_CODE
        JOIN 
            COMMON F ON A.SMEM_SEMESTER = F.NAME
		WHERE 
			A.SMEM_NO =#{smemNo}
	</select>
	<select id="selectCount" parameterType="CounselVO" resultType="CounselVO">
		SELECT 
		    (SELECT 
		    	COUNT(COUNS_NO) 
		     FROM 
		    	COUNSEL 
		     WHERE 
		     	COUNS_PRO = #{counsPro}) AS TOTAL,
		    (SELECT 
		    	COUNT(COUNS_NO) 
		     FROM 
		     	COUNSEL 
		     WHERE 
		     	COUNS_STATUS = 'STA08' 
		     AND 
		     	COUNS_PRO = #{counsPro}) AS WAITING
		FROM
		    DUAL
	</select>
	
	<update id="updateCounsel" parameterType="String">
		UPDATE 
		    COUNSEL 
		SET 
		    COUNS_STATUS = 'STA06'
		WHERE 
		    COUNS_NO=#{counsNo}
	</update>
	<update id="update" parameterType="CounselVO">
		UPDATE 
		    COUNSEL
		<set>
		   <if test="counsContent != null">
		    	COUNS_CONTENT=#{counsContent}
		    </if>
			<if test="counsStatus != null">
				,COUNS_STATUS = #{counsStatus}
			</if>
		</set>
		WHERE 
		    COUNS_NO=#{counsNo}
	</update>
	

</mapper>