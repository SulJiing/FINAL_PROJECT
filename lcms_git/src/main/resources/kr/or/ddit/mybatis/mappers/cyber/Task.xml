<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.professor.cyber.task.dao.TaskDAO">
	
	<select id="selectTaskList" parameterType="String" resultType="TaskVO">
		SELECT
		    task_code,gf_no,lec_code,task_content,task_period,task_title,total_score,task_status
		FROM
		    task
		WHERE lec_code = #{lecCode}
		AND task_status = #{taskStatus}
	</select>
	
	<select id="selectTaskListS" parameterType="String" resultType="TaskVO">
		SELECT
		    T.task_code,T.gf_no,lec_code,task_content,task_period,task_title,total_score,task_status,
            ts.*
		FROM
		    task T LEFT OUTER JOIN task_submit TS on (T.task_code = TS.task_code)
		WHERE lec_code = #{lecCode}
		AND task_status = #{taskStatus}
        AND ts.smem_no = #{smemNo}
	</select>
	
	<resultMap type="TaskVO" id="taskMap" autoMapping="true">
		<id property="taskCode" column="task_code"/>
		<collection property="fileList" javaType="list" ofType="FileVO" autoMapping="true">
			<id property="fileNo" column="file_no"/>
		</collection>
	</resultMap>
	
	<select id="selectTask" parameterType="String" resultMap="taskMap">
		SELECT
		    T.task_code,T.gf_no,T.lec_code,T.task_content,T.task_period,T.task_title,T.total_score,T.task_status,
		    F.file_no,F.file_nm,F.file_save,F.mime,F.file_size,F.fancy_size,F.gf_no
		FROM
		    task T LEFT OUTER JOIN "FILE" F on (T.gf_no = F.gf_no)
		WHERE T.task_code = #{taskCode}
	</select>
	
	<select id="selectAllStudent" parameterType="String" resultType="StudentVO">
		SELECT R.smem_no
		FROM task T  INNER JOIN registration R on (T.lec_code = R.lec_code)
		WHERE T.task_code = #{taskCode}
	</select>
	
	<select id="selectAllCount" parameterType="String" resultType="int">
		SELECT count(*)
		FROM task T  INNER JOIN registration R on (T.lec_code = R.lec_code)
		WHERE T.task_code = #{taskCode}
	</select>
	
	<select id="selectCompletion" parameterType="String" resultType="int">
		SELECT count(*)
		FROM task T  
		    INNER JOIN registration R on (T.lec_code = R.lec_code)
		    INNER JOIN task_submit TS on (R.smem_no = TS.smem_no)
		WHERE T.task_code = #{taskCode}
		    AND TS.task_code = #{taskCode}
		    AND TS.submit_status = '제출'
	</select>
	
	<update id="updateTask" parameterType="TaskVO">
		UPDATE task
		SET
			task_content = #{taskContent,jdbcType=VARCHAR}
			,task_period = #{taskPeriod,jdbcType=VARCHAR}
			,task_title = #{taskTitle,jdbcType=VARCHAR}
			,total_score = #{totalScore,jdbcType=VARCHAR}
		WHERE
		    task_code = #{taskCode}
	</update>
	
	<update id="uploadTask" parameterType="String">
		UPDATE task
		SET
			task_status = #{taskStatus,jdbcType=VARCHAR}
		WHERE
		    task_code = #{taskCode}
	</update>
	
	<delete id="deleteTask" parameterType="String">
		DELETE FROM task
		WHERE task_code = #{taskCode}
	</delete>
	
	<insert id="insertTask" parameterType="TaskVO">
		<selectKey order="BEFORE" keyProperty="taskCode" resultType="string">
			SELECT 'TA' || LPAD(TO_CHAR(NVL(MAX(to_number(substr(task_code,3))), 0)+1), 7, '0')   
			FROM task
		</selectKey>
		INSERT INTO task (
		    task_code,
		    lec_code,
		    task_content,
		    task_period,
		    task_title,
		    total_score,
		    gf_no
		) VALUES (
		    #{taskCode}
			, #{lecCode}
			, #{taskContent}
			, #{taskPeriod}
			, #{taskTitle}
			, #{totalScore}
			, #{gfNo}
		)
	</insert>
	
	<update id="taskEval" parameterType="String">
		UPDATE task
		SET
			task_status = 'ST03'
		WHERE
		    lec_code = #{lecCode}
	</update>
	
</mapper>